/* === Animated border + hover for .card (no markup changes) === */


:root {
  --card-w: 240px;   /* adjust to taste */
  --card-h: 360px;
}

.card {
  /* make the pseudo-borders work */
  position: relative;
  border: none;                 /* override Bootstrap border if present */
  border-radius: 14px;
  overflow: hidden;
  background: #fff;
  --accent: #16a34a;            /* UFV green; tweak if you want */

  width: var(--card-w);
  height: var(--card-h);
  display: flex;
  flex-direction: column;

  transition: transform .45s cubic-bezier(.2,.65,.2,1), box-shadow .3s ease;

  box-shadow:
          0 3px 0 rgba(255, 255, 255, .95) inset,     /* crisp inner hairline */
          0 12px 28px rgba(2, 6, 23, .38)           /* soft ambient lift */


}

.card .card-media {
  padding: 8px 8px 0;           /* top/left/right; keep bottom tight to the body */
  background: #fff;             /* same as card surface */
}

.card .card-media {
  padding: 16px 16px 0;           /* top/left/right; keep bottom tight to the body */
  background: #fff;             /* same as card surface */
}


/* Animated gradient border (masked ring) */
.card::before {
  content: "";
  position: absolute;
  inset: 0;
  padding: 2px;                 /* ring thickness */
  border-radius: inherit;
  background: conic-gradient(
          from 0deg,
          var(--accent),
          #22c55e,
          #60a5fa,
          #a78bfa,
          var(--accent)
  );
  /* show only the ring */
  -webkit-mask: linear-gradient(#000 0 0) content-box, linear-gradient(#000 0 0);
  -webkit-mask-composite: xor;
  mask-composite: exclude;
  animation: card-spin 6s linear infinite;
  pointer-events: none;
}

.card .price,
.card .card-text:last-child {
  margin-top: auto;
}

.card h5,
.card .small-text {
  margin: 0 0 .4rem 0;
  font-size: 1rem;
  line-height: 1.25;
  display: -webkit-box;
  -webkit-line-clamp: 2;     /* max 2 lines */
  -webkit-box-orient: vertical;
  overflow: hidden;
  min-height: 2.5em;         /* reserve 2 lines of space */
}

.card .card-body {
  flex: 1 1 auto;
  display: flex;
  flex-direction: column;
  padding: 12px 14px;
}

.card .card-title {
  margin: 0 0 .4rem 0;
  font-size: 1rem;
  line-height: 1.25;
  display: -webkit-box;
  -webkit-line-clamp: 2;
  -webkit-box-orient: vertical;
  overflow: hidden;
  min-height: 2.5em;     /* reserves space for 2 lines */
}



/* Lift + subtle tilt on hover */
.card:hover {
  transform: scale(.90);   /* or .975 for even subtler */
  box-shadow: 0 14px 28px rgba(0,0,0,.9);
}

.card .card-img-top {
  width: 100%;
  aspect-ratio: 3 / 4;
  object-fit: cover;
  flex: 0 0 auto;

  transition: transform .6s cubic-bezier(.22,.61,.36,1);
  transform-origin: center center;
  will-change: transform;
}

.card:hover .card-img-top {
  transform: scale(0.95);
}

/* Glossy “shine” sweep across the top */
.card::after {
  content: "";
  position: absolute;
  top: 0; left: -30%;
  width: 60%;
  height: 62%;                  /* ~top portion where your image sits */
  background: linear-gradient(120deg, transparent 30%, rgba(255,255,255,.45) 48%, transparent 64%);
  transform: translateX(-120%) skewX(-12deg);
  opacity: 0;
  pointer-events: none;
}
.card:hover::after {
  opacity: 1;
  animation: card-shine .8s ease forwards;
}


/* Respect users who prefer reduced motion */
@media (prefers-reduced-motion: reduce) {
  .card,
  .card .card-img-top { transition: none; }
  .card::before { animation: none; }
  .card:hover { transform: none; box-shadow: 0 10px 20px rgba(0,0,0,.12); }
  .card:hover::after { opacity: 0; animation: none; }
}



/* The main content column inside the .d-flex wrapper */
.browse-main {
  min-width: 0;          /* CRITICAL: let flex child shrink instead of forcing overflow */
  max-width: 100%;
}

/* The card grid */
.browse-grid {
  display: flex;
  flex-wrap: wrap;
  gap: 24px;             /* use gap instead of per-card margins */
  padding: 40px 24px 24px;
  box-sizing: border-box;
  overflow-x: clip;      /* or hidden; prevents horizontal scrollbar */
  width: 100%;
}

/* Optional: neutralize old per-card margins if you keep them in JSX */
.browse-grid > * { margin: 0 !important; }